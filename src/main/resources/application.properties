# ============================================================
# üß© CONFIGURACI√ìN GENERAL DEL GATEWAY
# ============================================================
server.port=8082
spring.application.name=uco-challenge-apigateway

# ============================================================
# üåê RUTAS DEL GATEWAY (EJEMPLO USERS-SERVICE)
# ============================================================
spring.cloud.gateway.routes[0].id=users-service
spring.cloud.gateway.routes[0].uri=http://localhost:8083
spring.cloud.gateway.routes[0].predicates[0]=Path=/users/**
# Quita el prefijo /users antes de enviar la request al backend
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1

spring.cloud.gateway.routes[1].id=backend-api-rewrite
spring.cloud.gateway.routes[1].uri=http://localhost:8083
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/**
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/api/(?<segment>.*),/uco-challenge/api/v1/$\{segment}

# ============================================================
# üîí AUTH0 / RESOURCE SERVER
# ============================================================
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://dev-ebechd8p85cw3p1x.us.auth0.com/
auth0.audience=https://api.uco-challenge

# ============================================================
# üåç CORS CONFIG (para tu SecurityConfig y global gateway)
# ============================================================
# Lista de or√≠genes permitidos para el frontend (separados por coma)
web.cors.allowed-origins=http://localhost:5173,http://localhost:3000,http://localhost:4200

# --- CORS GLOBAL PARA SPRING CLOUD GATEWAY ---
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=http://localhost:5173,http://localhost:3000,http://localhost:4200
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET,POST,PATCH,PUT,DELETE,OPTIONS,HEAD
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=Authorization,Content-Type,X-Requested-With,Accept,Origin
spring.cloud.gateway.globalcors.corsConfigurations.[/**].exposedHeaders=Authorization,X-Get-Header
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowCredentials=true
spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping=true
spring.cloud.gateway.default-filters[0]=DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials Access-Control-Allow-Headers Access-Control-Allow-Methods RETAIN_UNIQUE

# ============================================================
# ‚öôÔ∏è ACTUATOR (opcional para health checks)
# ============================================================
management.endpoints.web.exposure.include=health,info

# ============================================================
# üîê FIRMA OPCIONAL HACIA MICROSERVICIOS
# ============================================================
gateway.hmac.signature=4F39B2E91A8D44C2B28C937A7F84E72F

# ============================================================
# üßæ LOGGING (√∫til mientras depuras seguridad / CORS)
# ============================================================
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.reactor.netty.http.client=INFO
logging.level.org.springframework.web.cors=DEBUG
